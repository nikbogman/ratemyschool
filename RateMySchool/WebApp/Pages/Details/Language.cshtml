@page "{id}"
@model WebApp.Pages.Details.LanguageModel
@{
    ViewData["Title"] = Model.School.Name;
}

<main>
    <div class="my-5 container">
        <h1 class="text-body-emphasis p-4 text-center">@Model.School.Name</h1>

        <div class="card">
            <div class="card-body">
                <p class="card-text">City: <b>@Model.School.City</b></p>
                <p class="card-text">Number: <b>@Model.School.Number</b></p>
                <p class="card-text">Type: <b>@Model.School.Type school</b></p>
                        @foreach (var rank in Model.School.Statistic.Rank)
                        {
                    <p class="card-text">@rank.Key Rank: <b>@rank.Value</b></p>
                        }
                <p class="card-text">Primary language: <b>@Model.School.PrimaryLanguage</b></p>
                <p class="card-text">Secondary language: <b>@Model.School.SecondaryLanguage</b></p>
                        @if (Model.School.ScoreRequirement == null && Model.School.ScoreRequirement == 0)
                        {
                    <p class="card-text">Score requirement: <b>None</b></p>
                        }
                        else
                        {
                    <p class="card-text">Score requirement: <b>@Model.School.ScoreRequirement</b></p>
                        }
                <p class="card-text"> Rating: @{
                        var fullStars = Math.Floor(Model.School.Statistic.Rating);
                        var hasHalfStar = Model.School.Statistic.Rating % 1 != 0;
                        for (int i = 0; i < fullStars; i++)
                        {
                            <span class="fa fa-star star checked"></span>
                        }
                        if (hasHalfStar)
                        {
                            <span class="fa fa-star-half star checked"></span>
                        }
                } <b>@Model.School.Statistic.Rating</b></p>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="">
            <h2 class="p-4 text-center">Reviews</h2>
            @if (!Model.Reviews.Any())
            {
                <h6>Currently there are either no reviews or only reported ones.</h6>
            }
            @foreach (var review in Model.Reviews)
            {
                <div class="card my-3">
                    <div class="card-body">
                        <div>
                            <h6 class="card-subtitle mb-2 text-muted">@review.CreatedAt</h6>
                            <p class="card-text">@review.Content</p>
                            <div class="stars">
                                @for (int i = 0; i < review.Rating; i++)
                                {
                                    <span class="fa fa-star star checked"></span>
                                }
                            </div>
                        </div>
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <a asp-page="/CreateReport/Index" asp-route-id="@review.Id" class="btn btn-danger me-2 mt-2">Report</a>
                        }
                    </div>
                </div>
            }
        </div>

        @if (User.Identity != null && User.Identity.IsAuthenticated)
        {
            <div class="my-5">
                <h2 class="text-center">Add Review</h2>
                <form method="post">
                    <div class="mb-3">
                        <label for="reviewContent" class="form-label">Content <span class="required">*</span></label>
                        <textarea asp-for="ReviewViewModel.Content" class="form-control" id="reviewContent" rows="3"
                                  placeholder="Write your review"></textarea>
                        <span class="text-danger" asp-validation-for="ReviewViewModel.Content"></span>
                    </div>
                    <div class="mb-3">
                        <label for="rating-input" class="form-label">Rating <span class="required">*</span></label>
                        <div class="rating-input">
                            <input asp-for="ReviewViewModel.Rating" type="number" min="0" max="5" step="1" class="star-input">
                            <div class="stars"></div>
                        </div>
                        <input type="hidden" id="rating" name="rating" value="0">
                        <span class="text-danger" asp-validation-for="ReviewViewModel.Rating"></span>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        }
    </div>

    <script>
        const raitngInput = document.querySelector('.rating-input');
        const starInput = raitngInput.querySelector('.star-input');
        const stars = raitngInput.querySelector('.stars');

        function updateStars() {
            const rating = parseFloat(starInput.value);
            stars.innerHTML = '';

            for (let i = 1; i <= 5; i++) {
                const star = document.createElement('span');
                star.classList.add('fa', 'fa-star', 'star', i <= rating ? 'checked' : null);
                star.addEventListener('click', () => {
                    starInput.value = i;
                    updateStars();
                });
                stars.appendChild(star);
            }
        }

        starInput.addEventListener('input', updateStars);
        updateStars();
    </script>

</main>